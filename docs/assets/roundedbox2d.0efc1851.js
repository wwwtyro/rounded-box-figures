import"./modulepreload-polyfill.b7f2da20.js";import{j as e,k as t,o,q as l,r as n,u as s,v as i,w as r,x as a,y as h,z as g}from"./vendor.568513fe.js";const m=document.getElementById("render-canvas"),c=m.getContext("2d"),f=document.getElementById("radius-input");let p=f.valueAsNumber;f.addEventListener("input",(e=>{p=f.valueAsNumber,b()}));const u=document.getElementById("resolution-input");let d=u.valueAsNumber;function b(){m.width=m.clientWidth,m.height=m.clientHeight;const f=e(m.width/2,m.height/2),u=.9*Math.min(m.width,m.height),b=[];for(let t=0;t<=d;t++)b.push(e(-.5,t/d-.5));for(let t=1;t<=d;t++)b.push(e(t/d-.5,.5));for(let t=1;t<=d;t++)b.push(e(.5,.5-t/d));for(let t=1;t<d;t++)b.push(e(.5-t/d,-.5));const y=b.map((l=>function(l,n){const m=e(1,1),c=s(o(),m,e(.5,.5));i(c,c,[n,n]);const f=s(o(),m,e(-.5,-.5));r(f,f,[n,n]);const p=a(o(),f,l);h(p,c,p);const u=g(o(),i(o(),l,p));return{normal:u,position:t(o(),p,u,n),clamped:p}}(l,p))),k=y.map((e=>e.position)),v=y.map((e=>e.clamped)),P=b.map((e=>t(o(),f,e,u))),T=k.map((e=>t(o(),f,e,u))),S=v.map((e=>t(o(),f,e,u)));c.strokeStyle="rgb(224, 224, 224)",c.beginPath();for(let e=0;e<b.length;e++){const t=P[e],o=T[e];c.moveTo(t[0],t[1]),c.lineTo(o[0],o[1])}c.stroke(),c.strokeStyle="rgb(255, 192, 192)",c.beginPath();for(let e=0;e<b.length;e++){const t=S[e],o=T[e];c.moveTo(t[0],t[1]),c.lineTo(o[0],o[1])}c.stroke();const I=e(-.5+p,-.5+p),E=e(.5-p,.5-p),M=l(o(),E,I);t(I,f,I,u),n(M,M,u),c.strokeStyle="rgb(255, 128, 128)",c.strokeRect(I[0],I[1],M[0],M[1]),c.fillStyle="rgb(255, 128, 128)",c.strokeStyle="rgb(255, 192, 192)";for(const e of S)c.beginPath(),c.ellipse(e[0],e[1],3,3,0,0,2*Math.PI),c.fill(),c.beginPath(),c.ellipse(e[0],e[1],p*u,p*u,0,0,2*Math.PI),c.stroke();c.fillStyle="rgb(128, 128, 128)";for(const e of P)c.beginPath(),c.ellipse(e[0],e[1],3,3,0,0,2*Math.PI),c.fill();c.strokeStyle="rgb(128, 128, 128)",c.beginPath(),c.moveTo(P[0][0],P[0][1]);for(let e=1;e<b.length;e++){const t=P[e];c.lineTo(t[0],t[1])}c.lineTo(P[0][0],P[0][1]),c.stroke(),c.fillStyle="rgb(0, 0, 0)";for(const e of T)c.beginPath(),c.ellipse(e[0],e[1],3,3,0,0,2*Math.PI),c.fill();c.strokeStyle="rgb(0, 0, 0)",c.beginPath(),c.moveTo(T[0][0],T[0][1]);for(let e=1;e<k.length;e++){const t=T[e];c.lineTo(t[0],t[1])}c.lineTo(T[0][0],T[0][1]),c.stroke()}u.addEventListener("input",(e=>{d=u.valueAsNumber,b()})),b();
